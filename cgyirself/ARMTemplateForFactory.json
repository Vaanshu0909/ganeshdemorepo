{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "cgyirself"
		},
		"AzureSqlDatabase_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase'"
		},
		"LsSSMS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LsSSMS'"
		},
		"blobstrg_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobstrg'"
		},
		"AzureSqlDatabase_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "vaanshuazuresqlserver.database.windows.net"
		},
		"AzureSqlDatabase_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "vaanshu"
		},
		"AzureSqlDatabase_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ganesh"
		},
		"LsSSMS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-8OTJPKL\\CHUKKASQLSERVER"
		},
		"LsSSMS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "azurelink"
		},
		"LsSSMS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DailyFilesLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileNames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "FileNames",
								"value": "FileValues"
							}
						],
						"typeProperties": {
							"dataset": {
								"referenceName": "DailyFilesgetmetadadatsourcedataset",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.Container",
										"type": "Expression"
									},
									"Folder": {
										"value": "@pipeline().parameters.StorageFolder",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "LoadEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileNames').output.childItems",
								"type": "Expression"
							},
							"batchCount": 3,
							"activities": [
								{
									"name": "Copy data from file",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "FlattenHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DailyFilesLoadSourceCopyDataset",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.Container",
													"type": "Expression"
												},
												"Folder": {
													"value": "@pipeline().parameters.StorageFolder",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CopyFilestoSyncFolderDataset",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.Container",
													"type": "Expression"
												},
												"SyncFolder": {
													"value": "@pipeline().parameters.SyncFolder",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('copy_',item().name,'_',utcNow(),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Container": {
						"type": "string",
						"defaultValue": "input"
					},
					"StorageFolder": {
						"type": "string",
						"defaultValue": "csv"
					},
					"SyncFolder": {
						"type": "string",
						"defaultValue": "CopyFiles"
					}
				},
				"variables": {
					"FileName": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DailyFilesgetmetadadatsourcedataset')]",
				"[concat(variables('factoryId'), '/datasets/DailyFilesLoadSourceCopyDataset')]",
				"[concat(variables('factoryId'), '/datasets/CopyFilestoSyncFolderDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFilestoSyncFolderDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstrg",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"SyncFolder": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().SyncFolder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstrg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyFilesLoadSourceCopyDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstrg",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstrg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyFilesgetmetadadatsourcedataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstrg",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstrg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LsSSMS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('LsSSMS_properties_typeProperties_server')]",
					"database": "[parameters('LsSSMS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LsSSMS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LsSSMS_password')]"
					}
				},
				"connectVia": {
					"referenceName": "selfhostir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/selfhostir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobstrg')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobstrg_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/selfhostir')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}